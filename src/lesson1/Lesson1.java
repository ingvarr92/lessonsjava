package lesson1;

public class Lesson1 {

    //psvm быстрый вызов точки входа
    public static void main(String[] args) {
        /*
        многострочнй комментарий
         */
        System.out.println("lesson1.Lesson1");//sout быстрый вызов

        // объявление переменных
        // типДанных имяПеременной;
        // типДанных имяПеременной1,имяПеременной2,имяПеременной1;
        // имя переменных только буквы, цифры и нижнее подчеркивание.
        // С маленькой буквы.каждое следующее слово с большой буквы. Существительное и что там хранится.
        // имяПеременной = значение;
       //имяПеременной1,имяПеременной2,имяПеременной1 = значение;

        byte byteVar; // (8 бит) -128 127
        byteVar = 1;
        short shortVar;// (16 бит) -32768 32767


        int intVar = 1_000_000; // (32 бита)компилятор игнорирует "_"
        // целые числа на ноль не делятся.
        long x = 600000000L; // (64 бита)в конце необходимо ставит "L" иначе оно воспринимается как int


        // float и double переменные не высокой точности, только до первой цифры после запятой
        float floatVar = 0.4F; // в конце необходимо ставит "F" иначе оно воспринимается как double
        double doubleVar = 0.5;


        boolean bool = true;
        boolean boo2 = false;



        // Приведение типов
        intVar = byteVar; // автоматическое привидение
        byte byteNum = (byte)intVar; // явное привидение типов
        // boolean ни к одному типу не приводится



        // Операторы
        // Арифмитические
        // + | - | * | / | % (взятие остатка от делениея)

        long long1 = 78;
        int int1 = 12;
        // int res = long1 + int1; ошибка все будет преобразовано в long



        // логические операторы
        // && и (может быть & вычисляет оба оператора)
        // || или (может быть | вычисляет оба оператора)
        // ! не
        // ^ если операторы разные и один из них true то он вернет true (исключающие и)


//kjgkgkjgkjg

    }
}
